def window():
    return '15m'
def groupby():
    return 'destination_security_id'
def algorithm(event):
    if event['event_name'] == 'Virus/Malware Detected':
        if stats.count('malware_name') >= 5:
            return 0.9
    return 0.0
def context(event_data):
    return (
        "Multiple malware detections ("
        + str(stats.count('malware_name'))
        + ") found on host " + event_data['destination_security_id'] + "."
    )
def criticality():
    return 'HIGH'
def tactic():
    return 'Persistence (TA0003)'
def technique():
    return 'Boot or Logon Autostart Execution (T1547)'
def artifacts():
    return stats.collect(['destination_security_id', 'malware_name', 'file_path'])
def entity(event):
    return {'derived': False, 'value': event['destination_security_id'], 'type': 'host'}